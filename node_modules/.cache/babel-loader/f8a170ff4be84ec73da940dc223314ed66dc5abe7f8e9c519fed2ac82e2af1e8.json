{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Laptop Seller\\\\Desktop\\\\MERN\\\\Auth\\\\frontend\\\\src\\\\pages\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport { jwtDecode } from \"jwt-decode\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Dashboard = (req, res) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const populateQuote = async () => {\n    const response = await fetch('http://localhost:6001/api/quote', {\n      method: 'POST',\n      headers: {\n        \"content-type\": \"application/json\"\n      }\n    });\n    user = response.json();\n  };\n  useEffect(async () => {\n    const token = localStorage.getItem(\"token\");\n    if (token) {\n      user = jwtDecode(token);\n      if (!user) {\n        localStorage.removeItem(\"token\");\n      } else {\n        populateQuote();\n      }\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Welcome, \", user.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Dashboard, \"5s2qRsV95gTJBmaaTh11GoxYeGE=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","jwtDecode","jsxDEV","_jsxDEV","Fragment","_Fragment","Dashboard","req","res","_s","user","setUser","useState","populateQuote","response","fetch","method","headers","json","token","localStorage","getItem","removeItem","children","fileName","_jsxFileName","lineNumber","columnNumber","name","_c","$RefreshReg$"],"sources":["C:/Users/Laptop Seller/Desktop/MERN/Auth/frontend/src/pages/Dashboard.js"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { jwtDecode } from \"jwt-decode\";\r\n\r\nconst Dashboard = (req, res) => {\r\n\r\n  const [user, setUser] = useState(null);\r\n\r\n  const populateQuote = async () => {\r\n    const response = await fetch('http://localhost:6001/api/quote', {\r\n      method: 'POST',\r\n        headers: {\r\n            \"content-type\": \"application/json\",\r\n        }\r\n    })\r\n    user = response.json();\r\n  }\r\n\r\n  useEffect(async () => {\r\n    const token = localStorage.getItem(\"token\");\r\n\r\n    if (token) {\r\n      user = jwtDecode(token);\r\n      if (!user) {\r\n        localStorage.removeItem(\"token\");\r\n      } else {\r\n        populateQuote();\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <h1>Dashboard</h1>\r\n      <h3>Welcome, {user.name}</h3>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,SAAS,QAAQ,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEvC,MAAMC,SAAS,GAAGA,CAACC,GAAG,EAAEC,GAAG,KAAK;EAAAC,EAAA;EAE9B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGC,QAAQ,CAAC,IAAI,CAAC;EAEtC,MAAMC,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,iCAAiC,EAAE;MAC9DC,MAAM,EAAE,MAAM;MACZC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB;IACJ,CAAC,CAAC;IACFP,IAAI,GAAGI,QAAQ,CAACI,IAAI,CAAC,CAAC;EACxB,CAAC;EAEDlB,SAAS,CAAC,YAAY;IACpB,MAAMmB,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAE3C,IAAIF,KAAK,EAAE;MACTT,IAAI,GAAGT,SAAS,CAACkB,KAAK,CAAC;MACvB,IAAI,CAACT,IAAI,EAAE;QACTU,YAAY,CAACE,UAAU,CAAC,OAAO,CAAC;MAClC,CAAC,MAAM;QACLT,aAAa,CAAC,CAAC;MACjB;IACF;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEV,OAAA,CAAAE,SAAA;IAAAkB,QAAA,gBACEpB,OAAA;MAAAoB,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClBxB,OAAA;MAAAoB,QAAA,GAAI,WAAS,EAACb,IAAI,CAACkB,IAAI;IAAA;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAAA,eAC7B,CAAC;AAEP,CAAC;AAAClB,EAAA,CAjCIH,SAAS;AAAAuB,EAAA,GAATvB,SAAS;AAmCf,eAAeA,SAAS;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}